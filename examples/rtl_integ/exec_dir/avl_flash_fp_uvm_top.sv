/********************************************
* FPUVM App: UVM for FPGAs
* Automatically generated by FPUVM Riviera App 
* Visit http://fp-uvm.blogspot.com for more 
* Generated on   : 2021-09-22 20:02:27
********************************************/ 


// Generating FPUVM top module for DUT: avl_flash
// ---------------------------------------------------------
`include "avl_flash_if.sv"
`include "avl_flash_fp_uvm_test.sv"
module fp_uvm_avl_flash;
  timeunit 1ns;
  timeprecision 1ns;
  parameter CLK_PERIOD = 10;

  // Simple clock generator
  bit clock ;
  always # (CLK_PERIOD/2) clock <= ~clock;

  // Interface instance
  avl_flash_if avl_flash_if_0 (.*);

  // Connect TB clk to Interface instance clk

  // DUT instance
  avl_flash avl_flash_0 (
    .avmm_addr(avl_flash_if_0.avmm_addr),
    .avmm_read(avl_flash_if_0.avmm_read),
    .avmm_write(avl_flash_if_0.avmm_write),
    .avmm_writedata(avl_flash_if_0.avmm_writedata),
    .clock(avl_flash_if_0.clock),
    .csr_status(avl_flash_if_0.csr_status),
    .reset_n(avl_flash_if_0.reset_n),
    .avmm_readdata(avl_flash_if_0.avmm_readdata),
    .csr_control(avl_flash_if_0.csr_control)
  );


  // Using FPUVM
  avl_flash_test avl_flash_test_0;
  initial begin : fp_uvm_test
    avl_flash_test_0 = new ();
    // Connect virtual interface to physical interface
    avl_flash_test_0.vif = avl_flash_if_0;
    // Kick start standard UVM phasing
    run_test ();
  end : fp_uvm_test
endmodule : fp_uvm_avl_flash

